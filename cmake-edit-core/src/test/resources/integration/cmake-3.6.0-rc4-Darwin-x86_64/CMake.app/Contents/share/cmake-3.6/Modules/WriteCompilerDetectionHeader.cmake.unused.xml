<list>
  <problem>
    <problem>Value not used</problem>
    <details>set(_cmake_oldestSupported_${CompilerId} ${_cmake_oldestSupported} PARENT_SCOPE)</details>
    <lineRange>233</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(_cmake_feature_test_${CompilerId}_${feature} ${_cmake_feature_test_${feature}} PARENT_SCOPE)</details>
    <lineRange>235</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(_compiler_id_version_compute_${CompilerId} ${_compiler_id_version_compute} PARENT_SCOPE)</details>
    <lineRange>242</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(compilers
    GNU
    Clang
    AppleClang
    MSVC
    SunPro
    Intel
  )</details>
    <lineRange>320-327</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(_need_hex_conversion TRUE)</details>
    <lineRange>339</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(compiler_file_content_
&quot;#ifndef ${prefix_arg}_COMPILER_DETECTION_H
#  error This file may only be included from ${main_file_name}
#endif\n&quot;)</details>
    <lineRange>385-388</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(PREFIX ${prefix_arg}_)</details>
    <lineRange>440</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(MACRO_DEC ${prefix_arg}_DEC)</details>
    <lineRange>442</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(MACRO_HEX ${prefix_arg}_HEX)</details>
    <lineRange>443</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(MACRO_DEC)</details>
    <lineRange>445</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(MACRO_HEX)</details>
    <lineRange>446</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(PREFIX)</details>
    <lineRange>450</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(MACRO_DEC)</details>
    <lineRange>451</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(MACRO_HEX)</details>
    <lineRange>452</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(pp_if &quot;elif&quot;)</details>
    <lineRange>454</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(${compiler_file_content} &quot;${${compiler_file_content}}${_define_item}&quot;)</details>
    <lineRange>465</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(file_content &quot;${file_content}
#  ifndef ${def_value}
#    if ${def_name}
#      define ${def_value} [[deprecated]]
#      define ${def_value}_MSG(MSG) [[deprecated(MSG)]]
#    elif ${prefix_arg}_COMPILER_IS_GNU || ${prefix_arg}_COMPILER_IS_Clang
#      define ${def_value} __attribute__((__deprecated__))
#      define ${def_value}_MSG(MSG) __attribute__((__deprecated__(MSG)))
#    elif ${prefix_arg}_COMPILER_IS_MSVC
#      define ${def_value} __declspec(deprecated)
#      define ${def_value}_MSG(MSG) __declspec(deprecated(MSG))
#    else
#      define ${def_value}
#      define ${def_value}_MSG(MSG)
#    endif
#  endif
\n&quot;)</details>
    <lineRange>611-627</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(file_content &quot;${file_content}#endif\n&quot;)</details>
    <lineRange>631</lineRange>
  </problem>
  <problem>
    <problem>Value not used</problem>
    <details>set(${_WCD_OUTPUT_FILES_VAR} ${${_WCD_OUTPUT_FILES_VAR}} PARENT_SCOPE)</details>
    <lineRange>652</lineRange>
  </problem>
</list>